{"version":3,"sources":["images/logo.png","images/landing.jpg","Components/NavBar/NavBar.js","Components/Home/Home.js","Components/ProductItem/ProductItem.js","Components/Products/Products.js","Components/ProductDetailPage/ProductDetailPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","className","role","aria-label","href","src","logo","width","height","alt","id","to","Home","bike","ProductItem","console","log","product","name","image","onClick","setCurrentProduct","Products","products","productData","map","index","key","ProductDetailPage","currentProduct","price","App","getProductData","a","axios","get","apiData","data","setState","apiDataLoaded","componentDidMount","state","this","exact","path","render","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6a817b4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.96d6dbed.png\";","module.exports = __webpack_public_path__ + \"static/media/landing.7cc531a3.jpg\";","import React from 'react';\nimport { Link} from 'react-router-dom'\nimport logo from '../../images/logo.png'\n\n\n\nconst NavBar = props => {\n  \n    return(\n  <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n     <div className=\"navbar-brand\">\n         <a className=\"navbar-item\" href=\"https://bulma.io\">\n        <img className=\"logo\" src={logo}width={112} height={28} alt=\"Top View Logo\" />\n        </a>\n  </div>\n    <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n           <li className=\"navbar-item\"> <Link to=\"/\">Home</Link></li>\n          <li className=\"navbar-item\"><Link to=\"/products\">Rentals</Link></li>\n         </div>\n    </div>\n  \n  </nav>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport bike from '../../images/landing.jpg'\nimport {Link} from 'react-router-dom'\n\nconst Home = props =>{\n    return(\n    <div className=\"homepage-container \" > \n    <div className=\"column \">\n    <img className=\"landing\" src={bike} alt=\"Bike Rider\" />\n    <div className=\"text-block\">\n    <p className=\"quote\">What you seek is seeking you!</p>\n    <p className=\"question\">Want to explore the Big Apple? </p>\n    <Link to=\"/products\"><button>Check Out Our Rentals</button></Link>\n  </div>    \n  </div>\n</div>\n    )\n}\n    \n\nexport default Home;","import React from 'react';\nimport { FaPlus } from \"react-icons/fa\";\nimport {Link} from 'react-router-dom'\n\nconst ProductItem = (props) =>{\n    console.log(props.product)\n    return(\n\n\n        <div className=\"product\" >\n        <li className=\"name\">{props.product.name}</li>\n        <img className=\"img\" src={props.product.image} alt=\"product-name\"/>   \n        <Link to={`/products/${props.product.id}`}\n           onClick={() => props.setCurrentProduct(props.product)}> \n        <p className=\"plus\"><FaPlus/></p>\n        </Link> \n        \n        </div>\n       \n    )\n}\n\nexport default ProductItem;","import React from 'react';\nimport ProductItem from '../ProductItem/ProductItem'\n\n\nconst Products = (props) =>{\n    console.log(props.products)\n    const productData = props.products && props.products.map((product,index) => {\n    return <ProductItem key={product.id}\n                        product={product}    \n                        setCurrentProduct={props.setCurrentProduct} />    \n                      \n    })\n\n    return(\n        <div className=\"product-list-container\" >\n        <h1>Browse Our Rental Options</h1>\n        <div className=\"product-list\" >\n        {productData}\n        \n        </div>\n        </div>       \n    )}\n\nexport default Products;\n\n\n","import React from 'react';\nimport {Link} from 'react-router-dom'\nimport { FaAngleLeft } from \"react-icons/fa\";\n\n\n\nconst ProductDetailPage = ({currentProduct})=>{\n    console.log(currentProduct)\n    return(\n\n      \n          <div className=\"container\">\n                <h1 className=\"title\">{currentProduct.name}</h1>\n                 <img className=\"detailImg\" src={currentProduct.image} alt=\"product-name\"/> \n                <p className=\"detailPrice\">Price: ${currentProduct.price}</p>\n              <br></br>\n           <Link to=\"/products\" className=\"arrow\"><h3><FaAngleLeft /> Back </h3> </Link>\n         </div>\n \n \n        \n    )\n}\n\nexport default ProductDetailPage;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from './Components/Home/Home'\nimport Products from './Components/Products/Products'\nimport ProductDetailsPage from'./Components/ProductDetailPage/ProductDetailPage'\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiData: null,\n      apiDataLoaded: false,\n      currentProduct:{}\n    };\n  }\n\n  getProductData = async () => {\n    const products = await axios.get('http://localhost:4567/products');\n    const apiData = products.data;\n    // console.log(apiData)\n    this.setState({\n      apiData:apiData,\n      apiDataLoaded:true\n    })\n  }\n\n   setCurrentProduct = (product) =>{\n     this.setState({\n      currentProduct: product\n     })\n   }\n\n   componentDidMount = async () => {\n     await this.getProductData()\n   }\n\n\n  render() {\n    const products = this.state.apiData;\n\n    return (\n      <div className=\"App\">\n        <NavBar />\n     <Switch>\n        <Route \n        exact path=\"/products\"  \n        render={()=> <Products products={products} \n                               setCurrentProduct={this.setCurrentProduct} /> }\n        />\n        <Route exact path=\"/\" \n        render={()=> <Home  /> }\n        />\n\n        <Route exact path=\"/products/:id\" \n        render={()=> <ProductDetailsPage  products={products} \n                                          setCurrentProduct={this.setCurrentProduct} \n                                          currentProduct={this.state.currentProduct}/> }\n        />\n\n\n      \n    </Switch>\n        </div>\n      \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\n\nReactDOM.render(<BrowserRouter>\n<App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}